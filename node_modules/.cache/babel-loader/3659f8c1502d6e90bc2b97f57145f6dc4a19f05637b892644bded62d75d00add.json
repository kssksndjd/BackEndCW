{"ast":null,"code":"import \"core-js/modules/esnext.iterator.map.js\";\nexport default {\n  props: ['cart'],\n  methods: {\n    removeFromCart(item) {\n      this.$emit('remove-from-cart', item);\n      item.spaces++;\n    },\n    checkout() {\n      const order = {\n        name: this.name,\n        phone: this.phone,\n        items: this.cart.map(lesson => ({\n          lessonId: lesson._id,\n          subject: lesson.subject,\n          quantity: lesson.quantity || 1 // Include quantity\n        }))\n      };\n      fetch(\"http://localhost:3000/orders\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(order)\n      }).then(() => {\n        this.checkoutMessage = \"Order placed successfully!\";\n        this.$emit(\"clear-cart\"); // Emit an event to clear the cart\n      }).catch(error => {\n        console.error(\"Checkout error:\", error);\n        this.checkoutMessage = \"Error placing the order. Please try again.\";\n      });\n    }\n  },\n  compute: {\n    isCheckoutValid() {\n      // Check if the name contains only letters and phone contains only numbers\n      const nameValid = /^[A-Za-z\\s]+$/.test(this.name);\n      const phoneValid = /^[0-9]+$/.test(this.phone);\n      return nameValid && phoneValid && this.cart.length > 0;\n    }\n  }\n};","map":{"version":3,"names":["props","methods","removeFromCart","item","$emit","spaces","checkout","order","name","phone","items","cart","map","lesson","lessonId","_id","subject","quantity","fetch","method","headers","body","JSON","stringify","then","checkoutMessage","catch","error","console","compute","isCheckoutValid","nameValid","test","phoneValid","length"],"sources":["/Users/lyphilong/Desktop/FullStack/project/src/components/ShoppingCart.vue"],"sourcesContent":["<template>\n  <div class=\"container mt-5\">\n    \n    <div>\n      <h2 class=\"mt-5\">Shopping Cart</h2>\n      <ul class=\"list-group mb-4\">\n        <li v-for=\"item in cart\" :key=\"item._id\" class=\"list-group-item\">\n          <i class=\"fas fa-chalkboard-teacher\"></i> \n          {{ item.subject }} - ${{ item.price }} ({{ item.location }})\n          <button class=\"btn btn-danger btn-sm float-right\" @click=\"removeFromCart(item)\">Remove</button>\n        </li>\n      </ul>\n      <p v-if=\"cart.length === 0\" class=\"text-muted\">Your cart is empty.</p>\n\n    </div>\n\n    <h3>Checkout</h3>\n      <div v-if=\"cart.length > 0\">\n        <div class=\"form-group\">\n          <label for=\"name\">Name</label>\n          <input type=\"text\" id=\"name\" class=\"form-control\" v-model=\"name\" placeholder=\"Enter your name\">\n        </div>\n        <div class=\"form-group\">\n          <label for=\"phone\">Phone</label>\n          <input type=\"text\" id=\"phone\" class=\"form-control\" v-model=\"phone\" placeholder=\"Enter your phone number\">\n        </div>\n        <button class=\"btn btn-success\"  @click=\"checkout\">Submit Order</button>\n        <p v-if=\"checkoutMessage\" class=\"alert alert-info mt-3\">{{ checkoutMessage }}</p>\n      </div>\n      </div>\n  </template>\n  \n  <script>\n  export default {\n    props: ['cart'],\n    methods: {\n      removeFromCart(item) {\n        this.$emit('remove-from-cart', item);\n        item.spaces++;\n      },\n      checkout() {\n      const order = {\n        name: this.name,\n        phone: this.phone,\n        items: this.cart.map((lesson) => ({\n          lessonId: lesson._id,\n          subject: lesson.subject,\n          quantity: lesson.quantity || 1, // Include quantity\n        })),\n      };\n\n      fetch(\"http://localhost:3000/orders\", {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify(order),\n      })\n        .then(() => {\n          this.checkoutMessage = \"Order placed successfully!\";\n          this.$emit(\"clear-cart\"); // Emit an event to clear the cart\n        })\n        .catch((error) => {\n          console.error(\"Checkout error:\", error);\n          this.checkoutMessage = \"Error placing the order. Please try again.\";\n        });\n    },\n  },\n    compute: {\n      isCheckoutValid() {\n          // Check if the name contains only letters and phone contains only numbers\n          const nameValid = /^[A-Za-z\\s]+$/.test(this.name);\n          const phoneValid = /^[0-9]+$/.test(this.phone);\n          return nameValid && phoneValid && this.cart.length > 0;\n        }\n    }\n  };\n  </script>\n  "],"mappings":";AAiCE,eAAe;EACbA,KAAK,EAAE,CAAC,MAAM,CAAC;EACfC,OAAO,EAAE;IACPC,cAAcA,CAACC,IAAI,EAAE;MACnB,IAAI,CAACC,KAAK,CAAC,kBAAkB,EAAED,IAAI,CAAC;MACpCA,IAAI,CAACE,MAAM,EAAE;IACf,CAAC;IACDC,QAAQA,CAAA,EAAG;MACX,MAAMC,KAAI,GAAI;QACZC,IAAI,EAAE,IAAI,CAACA,IAAI;QACfC,KAAK,EAAE,IAAI,CAACA,KAAK;QACjBC,KAAK,EAAE,IAAI,CAACC,IAAI,CAACC,GAAG,CAAEC,MAAM,KAAM;UAChCC,QAAQ,EAAED,MAAM,CAACE,GAAG;UACpBC,OAAO,EAAEH,MAAM,CAACG,OAAO;UACvBC,QAAQ,EAAEJ,MAAM,CAACI,QAAO,IAAK,CAAC,CAAE;QAClC,CAAC,CAAC;MACJ,CAAC;MAEDC,KAAK,CAAC,8BAA8B,EAAE;QACpCC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UAAE,cAAc,EAAE;QAAmB,CAAC;QAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAChB,KAAK;MAC5B,CAAC,EACEiB,IAAI,CAAC,MAAM;QACV,IAAI,CAACC,eAAc,GAAI,4BAA4B;QACnD,IAAI,CAACrB,KAAK,CAAC,YAAY,CAAC,EAAE;MAC5B,CAAC,EACAsB,KAAK,CAAEC,KAAK,IAAK;QAChBC,OAAO,CAACD,KAAK,CAAC,iBAAiB,EAAEA,KAAK,CAAC;QACvC,IAAI,CAACF,eAAc,GAAI,4CAA4C;MACrE,CAAC,CAAC;IACN;EACF,CAAC;EACCI,OAAO,EAAE;IACPC,eAAeA,CAAA,EAAG;MACd;MACA,MAAMC,SAAQ,GAAI,eAAe,CAACC,IAAI,CAAC,IAAI,CAACxB,IAAI,CAAC;MACjD,MAAMyB,UAAS,GAAI,UAAU,CAACD,IAAI,CAAC,IAAI,CAACvB,KAAK,CAAC;MAC9C,OAAOsB,SAAQ,IAAKE,UAAS,IAAK,IAAI,CAACtB,IAAI,CAACuB,MAAK,GAAI,CAAC;IACxD;EACJ;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}