{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/esnext.iterator.constructor.js\";\nimport \"core-js/modules/esnext.iterator.find.js\";\nimport \"core-js/modules/esnext.iterator.map.js\";\nimport \"core-js/modules/esnext.iterator.reduce.js\";\nexport default {\n  data() {\n    return {\n      cart: [],\n      // Array of distinct lessons in the cart\n      name: '',\n      // Customer's name\n      phone: '' // Customer's phone number\n    };\n  },\n  computed: {\n    cartTotal() {\n      // Calculate the total price of the cart\n      return this.cart.reduce((total, item) => total + item.price * item.quantity, 0);\n    }\n  },\n  methods: {\n    addToCart(lesson) {\n      const existingItem = this.cart.find(item => item.lessonId === lesson.lessonId);\n      if (existingItem) {\n        if (existingItem.quantity < lesson.spaces) {\n          existingItem.quantity++;\n        }\n      } else {\n        this.cart.push({\n          lessonId: lesson.lessonId,\n          subject: lesson.subject,\n          location: lesson.location,\n          price: lesson.price,\n          availableSpaces: lesson.spaces,\n          quantity: 1\n        });\n      }\n    },\n    removeFromCart(index) {\n      this.cart.splice(index, 1);\n    },\n    increaseQuantity(index) {\n      if (this.cart[index].quantity < this.cart[index].availableSpaces) {\n        this.cart[index].quantity++;\n      }\n    },\n    decreaseQuantity(index) {\n      if (this.cart[index].quantity > 1) {\n        this.cart[index].quantity--;\n      }\n    },\n    async checkout() {\n      try {\n        const order = {\n          name: this.name,\n          phone: this.phone,\n          lessons: this.cart.map(item => ({\n            lessonId: item.lessonId,\n            quantity: item.quantity\n          }))\n        };\n        const response = await fetch('http://localhost:3000/orders', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(order)\n        });\n        if (response.ok) {\n          alert('Order placed successfully!');\n          this.cart = [];\n          this.name = '';\n          this.phone = '';\n        } else {\n          const error = await response.json();\n          alert(`Error: ${error.error}`);\n        }\n      } catch (err) {\n        console.error('Checkout error:', err);\n        alert('Something went wrong. Please try again.');\n      }\n    }\n  }\n};","map":{"version":3,"names":["data","cart","name","phone","computed","cartTotal","reduce","total","item","price","quantity","methods","addToCart","lesson","existingItem","find","lessonId","spaces","push","subject","location","availableSpaces","removeFromCart","index","splice","increaseQuantity","decreaseQuantity","checkout","order","lessons","map","response","fetch","method","headers","body","JSON","stringify","ok","alert","error","json","err","console"],"sources":["/Users/lyphilong/Desktop/FullStack/project/src/components/ShoppingCart.vue"],"sourcesContent":["<template>\n  <div class=\"container mt-5\">\n    <h2 class=\"text-center mb-4\">Shopping Cart</h2>\n\n    <!-- Cart Table -->\n    <table class=\"table\">\n      <thead>\n        <tr>\n          <th>Lesson</th>\n          <th>Location</th>\n          <th>Price</th>\n          <th>Quantity</th>\n          <th>Total</th>\n          <th>Actions</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr v-for=\"(item, index) in cart\" :key=\"item.lessonId\">\n          <td>{{ item.subject }}</td>\n          <td>{{ item.location }}</td>\n          <td>${{ item.price }}</td>\n          <td>\n            <button @click=\"decreaseQuantity(index)\" class=\"btn btn-sm btn-secondary\" :disabled=\"item.quantity === 1\">-</button>\n            {{ item.quantity }}\n            <button @click=\"increaseQuantity(index)\" class=\"btn btn-sm btn-secondary\" :disabled=\"item.quantity >= item.availableSpaces\">+</button>\n          </td>\n          <td>${{ item.price * item.quantity }}</td>\n          <td>\n            <button @click=\"removeFromCart(index)\" class=\"btn btn-danger btn-sm\">Remove</button>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n\n    <!-- Cart Total -->\n    <div class=\"text-right\">\n      <h4>Total: ${{ cartTotal }}</h4>\n    </div>\n\n    <!-- Checkout Form -->\n    <form @submit.prevent=\"checkout\">\n      <div class=\"form-group\">\n        <label for=\"name\">Name</label>\n        <input type=\"text\" v-model=\"name\" id=\"name\" class=\"form-control\" required placeholder=\"Enter your name\" />\n      </div>\n      <div class=\"form-group\">\n        <label for=\"phone\">Phone Number</label>\n        <input type=\"tel\" v-model=\"phone\" id=\"phone\" class=\"form-control\" required placeholder=\"Enter your phone number\" />\n      </div>\n      <button :disabled=\"cart.length === 0\" class=\"btn btn-primary\">Checkout</button>\n    </form>\n  </div>\n</template>\n\n<script>\nexport default {\n  data() {\n    return {\n      cart: [], // Array of distinct lessons in the cart\n      name: '', // Customer's name\n      phone: '', // Customer's phone number\n    };\n  },\n  computed: {\n    cartTotal() {\n      // Calculate the total price of the cart\n      return this.cart.reduce((total, item) => total + item.price * item.quantity, 0);\n    },\n  },\n  methods: {\n    addToCart(lesson) {\n      const existingItem = this.cart.find((item) => item.lessonId === lesson.lessonId);\n\n      if (existingItem) {\n        if (existingItem.quantity < lesson.spaces) {\n          existingItem.quantity++;\n        }\n      } else {\n        this.cart.push({\n          lessonId: lesson.lessonId,\n          subject: lesson.subject,\n          location: lesson.location,\n          price: lesson.price,\n          availableSpaces: lesson.spaces,\n          quantity: 1,\n        });\n      }\n    },\n    removeFromCart(index) {\n      this.cart.splice(index, 1);\n    },\n    increaseQuantity(index) {\n      if (this.cart[index].quantity < this.cart[index].availableSpaces) {\n        this.cart[index].quantity++;\n      }\n    },\n    decreaseQuantity(index) {\n      if (this.cart[index].quantity > 1) {\n        this.cart[index].quantity--;\n      }\n    },\n    async checkout() {\n      try {\n        const order = {\n          name: this.name,\n          phone: this.phone,\n          lessons: this.cart.map((item) => ({\n            lessonId: item.lessonId,\n            quantity: item.quantity,\n          })),\n        };\n\n        const response = await fetch('http://localhost:3000/orders', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n          },\n          body: JSON.stringify(order),\n        });\n\n        if (response.ok) {\n          alert('Order placed successfully!');\n          this.cart = [];\n          this.name = '';\n          this.phone = '';\n        } else {\n          const error = await response.json();\n          alert(`Error: ${error.error}`);\n        }\n      } catch (err) {\n        console.error('Checkout error:', err);\n        alert('Something went wrong. Please try again.');\n      }\n    },\n  },\n};\n</script>\n\n<style>\n/* Add some basic styling */\n.table th, .table td {\n  text-align: center;\n  vertical-align: middle;\n}\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}